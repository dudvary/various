% [] = writeTreeAsAmira(tree,neurite,outputFilename)
% Writes a tree with soma at (0,0,0) as an .am (amira) file
% Input:
% - tree
% - neuriteID: [3 6 7 4] for [dend axon soma apical] 
% - outputFilename
function [] = writeTreeAsAmira(tree,neurite,outputFilename)
    
        if (strcmp(outputFilename(end-2:end), '.am'))
            fname = outputFilename;  
        else
            fname = [outputFilename '.am'];
        end
               
        switch neurite
            case 'axon'
                neuriteID = 6; 
            case 'dend'
                neuriteID = 3;
            case 'soma'
                neuriteID = 7; 
            case 'apical'
                neuriteID = 4; 
            otherwise
                error('Neurite name does not exist! Use: axon|dend|soma'); 
        end

        %% Calculations
        idxB = find(B_tree(tree)==1)'; 
        idxRoot = 1; % should be (0,0,0)            % Soma Position / Root
        
        % If root is a BP, add one point as root point
        if sum(idxB==idxRoot)>0
            tree.X = [tree.X(1)+1E-3;  tree.X(:)];
            tree.Y = [tree.Y(1)+1E-3;  tree.Y(:)];
            tree.Z = [tree.Z(1)+1E-3;  tree.Z(:)];
            tree.R = [tree.R(1);       tree.R(:)];
            tree.D = [tree.D(1);       tree.D(:)];
            tmp = tree.dA; 
            tree.dA = sparse(size(tree.dA,1)+1,size(tree.dA,2)+1);
            tree.dA(2:end,2:end) = tmp; 
            tree.dA(2,1) = 1; 
        end
        
        idxC = find(C_tree(tree)==1)';              % CP 
        idxB = find(B_tree(tree)==1)';              % BP
        idxT = find(T_tree(tree)==1)';              % TP
        idxVertices = sort([idxB idxT idxRoot]);    % Vertices Indices        
        idxVertices = unique(idxVertices); 
        
        ipar = ipar_tree(tree); 
        sect = dissect_tree(tree);          % starting and ending nodes
        numEdges = size(sect,1); 
        numVertex = numEdges + 1; 
        
        % Edge Connectivity (transform indices)
        EdgeConn = nan(size(sect)); 
        for i = 1:size(sect,1)
            for j = 1:size(sect,2)
                EdgeConn(i,j) = find(sect(i,j)==idxVertices)-1; 
            end
        end
                
        if (size(EdgeConn,1) ~= numEdges)
            warning('Warning! Something is wrong with the Edges!'); 
        end
        
        % Number of Edge Points
        edgePts = nan(1,numEdges);  
        for i = sect(:,2)'              % Go through all ending vertices
            pts = 2; 
            while (ismember(ipar(i,pts),idxC) && pts<=size(ipar,2) && ~(ismember(ipar(i,pts),idxRoot))) % Should not be root
                pts = pts+1; 
            end
            edgePts(i==sect(:,2)') = pts; 
        end

        numPoints = sum(edgePts);
                
        %% Header Information 
        strHeader = sprintf(['# AmiraMesh 3D ASCII 2.0\n\n\n' ...
                        'define VERTEX %d\n' ...
                        'define EDGE %d\n' ...
                        'define POINT %d\n\n' ...                       
                        'Parameters {\n' ...
                        '    GraphLabels {\n' ...
                        '        Neuron {\n' ...
                        '            Dendrite {\n' ...
                        '                ApicalDendrite {\n' ...
                        '                    Color 1 0.5 0.5,\n' ...
                        '                    Id 4\n' ...
                        '                }\n' ...
                        '                BasalDendrite {\n' ...
                        '                    Color 0.8 0.4 0.4,\n' ...
                        '                    Id 5\n' ...
                        '                }\n' ...
                        '                Color 1 0 0,\n' ...
                        '                Id 3\n' ...
                        '            }\n' ...
                        '            Axon {\n' ...
                        '                Color 0 0 1,\n' ...
                        '                Id 6\n' ...
                        '            }\n' ...
                        '            Soma {\n' ...
                        '                Color 1 0 0,\n' ...
                        '                Id 7\n' ...
                        '            }\n' ...
                        '            Color 1 0 0,\n' ...
                        '            Id 2\n' ...
                        '        }\n' ...
                        '        Landmark {\n' ...
                        '            Pia {\n' ...
                        '                Color 0 1 0.5,\n' ...
                        '                Id 9\n' ...
                        '            }\n' ...
                        '            Vessel {\n' ...
                        '                Color 1 0.5 0,\n' ...
                        '                Id 10\n' ...
                        '            }\n' ...
                        '            Barrel {\n' ...
                        '                aRow {\n' ...
                        '                    A1 {\n' ...
                        '                        Color 1 0.2 0.2,\n' ...
                        '                        Id 13\n' ...
                        '                    }\n' ...
                        '                    A2 {\n' ...
                        '                        Color 1 0.2 0.2,\n' ...
                        '                        Id 14\n' ...
                        '                    }\n' ...
                        '                    A3 {\n' ...
                        '                        Color 1 0.2 0.2,\n' ...
                        '                        Id 15\n' ...
                        '                    }\n' ...
                        '                    A4 {\n' ...
                        '                        Color 1 0.2 0.2,\n' ...
                        '                        Id 16\n' ...
                        '                    }\n' ...
                        '                    Color 1 0.2 0.2,\n' ...
                        '                    Id 12\n' ...
                        '                }\n' ...
                        '                bRow {\n' ...
                        '                    B1 {\n' ...
                        '                        Color 1 0.25 0.25,\n' ...
                        '                        Id 18\n' ...
                        '                    }\n' ...
                        '                    B2 {\n' ...
                        '                        Color 1 0.25 0.25,\n' ...
                        '                        Id 19\n' ...
                        '                    }\n' ...
                        '                    B3 {\n' ...
                        '                        Color 1 0.25 0.25,\n' ...
                        '                        Id 20\n' ...
                        '                    }\n' ...
                        '                    B4 {\n' ...
                        '                        Color 1 0.25 0.25,\n' ...
                        '                        Id 21\n' ...
                        '                    }\n' ...
                        '                    Color 1 0.25 0.25,\n' ...
                        '                    Id 17\n' ...
                        '                }\n' ...
                        '                cRow {\n' ...
                        '                    C1 {\n' ...
                        '                        Color 1 0.3 0.3,\n' ...
                        '                        Id 23\n' ...
                        '                    }\n' ...
                        '                    C2 {\n' ...
                        '                        Color 1 0.3 0.3,\n' ...
                        '                        Id 24\n' ...
                        '                    }\n' ...
                        '                    C3 {\n' ...
                        '                        Color 1 0.3 0.3,\n' ...
                        '                        Id 25\n' ...
                        '                    }\n' ...
                        '                    C4 {\n' ...
                        '                        Color 1 0.3 0.3,\n' ...
                        '                        Id 26\n' ...
                        '                    }\n' ...
                        '                    C5 {\n' ...
                        '                        Color 1 0.3 0.3,\n' ...
                        '                        Id 27\n' ...
                        '                    }\n' ...
                        '                    C6 {\n' ...
                        '                        Color 1 0.3 0.3,\n' ...
                        '                        Id 28\n' ...
                        '                    }\n' ...
                        '                    Color 1 0.3 0.3,\n' ...
                        '                    Id 22\n' ...
                        '                }\n' ...
                        '                dRow {\n' ...
                        '                    D1 {\n' ...
                        '                        Color 1 0.35 0.35,\n' ...
                        '                        Id 30\n' ...
                        '                    }\n' ...
                        '                    D2 {\n' ...
                        '                        Color 1 0.35 0.35,\n' ...
                        '                        Id 31\n' ...
                        '                    }\n' ...
                        '                    D3 {\n' ...
                        '                        Color 1 0.35 0.35,\n' ...
                        '                        Id 32\n' ...
                        '                    }\n' ...
                        '                    D4 {\n' ...
                        '                        Color 1 0.35 0.35,\n' ...
                        '                        Id 33\n' ...
                        '                    }\n' ...
                        '                    D5 {\n' ...
                        '                        Color 1 0.35 0.35,\n' ...
                        '                        Id 34\n' ...
                        '                    }\n' ...
                        '                    D6 {\n' ...
                        '                        Color 1 0.35 0.35,\n' ...
                        '                        Id 35\n' ...
                        '                    }\n' ...
                        '                    Color 1 0.35 0.35,\n' ...
                        '                    Id 29\n' ...
                        '                }\n' ...
                        '                eRow {\n' ...
                        '                    E1 {\n' ...
                        '                        Color 1 0.4 0.4,\n' ...
                        '                        Id 37\n' ...
                        '                    }\n' ...
                        '                    E2 {\n' ...
                        '                        Color 1 0.4 0.4,\n' ...
                        '                        Id 38\n' ...
                        '                    }\n' ...
                        '                    E3 {\n' ...
                        '                        Color 1 0.4 0.4,\n' ...
                        '                        Id 39\n' ...
                        '                    }\n' ...
                        '                    E4 {\n' ...
                        '                        Color 1 0.4 0.4,\n' ...
                        '                        Id 40\n' ...
                        '                    }\n' ...
                        '                    E5 {\n' ...
                        '                        Color 1 0.4 0.4,\n' ...
                        '                        Id 41\n' ...
                        '                    }\n' ...
                        '                    E6 {\n' ...
                        '                        Color 1 0.4 0.4,\n' ...
                        '                        Id 42\n' ...
                        '                    }\n' ...
                        '                    Color 1 0.4 0.4,\n' ...
                        '                    Id 36\n' ...
                        '                }\n' ...
                        '                greekRow {\n' ...
                        '                    Alpha {\n' ...
                        '                        Color 1 0.1 0.1,\n' ...
                        '                        Id 44\n' ...
                        '                    }\n' ...
                        '                    Beta {\n' ...
                        '                        Color 1 0.1 0.1,\n' ...
                        '                        Id 45\n' ...
                        '                    }\n' ...
                        '                    Gamma {\n' ...
                        '                        Color 1 0.1 0.1,\n' ...
                        '                        Id 46\n' ...
                        '                    }\n' ...
                        '                    Delta {\n' ...
                        '                        Color 1 0.1 0.1,\n' ...
                        '                        Id 47\n' ...
                        '                    }\n' ...
                        '                    Color 1 0.1 0.1,\n' ...
                        '                    Id 43\n' ...
                        '                }\n' ...
                        '                Color 0 1 0,\n' ...
                        '                Id 11\n' ...
                        '            }\n' ...
                        '            Color 0 1 1,\n' ...
                        '            Id 8\n' ...
                        '        }\n' ...
                        '        Id 0,\n' ...
                        '        Color 0 0 0\n' ...
                        '    }\n' ...
                        '    ContentType "HxSpatialGraph"\n' ...
                        '}\n\n' ...  
                        'VERTEX { float[3] VertexCoordinates } @1\n' ...
                        'VERTEX { int GraphLabels } @2\n' ...
                        'EDGE { int[2] EdgeConnectivity } @3\n' ...
                        'EDGE { int NumEdgePoints } @4\n' ...
                        'EDGE { int GraphLabels } @5\n' ...
                        'POINT { float[3] EdgePointCoordinates } @6\n' ...
                        'POINT { float Radius } @7\n\n' ...
                        '# Data section follows'], ... 
                    numVertex,numEdges,numPoints);
                 
                
        %% Write to file
        fid = fopen(fname,'w');
        
        if fid ~= -1
            fprintf(fid,'%s\n',strHeader);
            
            % (1) Vertex Coordinates
            fprintf(fid,'%s\n','@1');
            for i = idxVertices
                fprintf(fid,'%e %e %e\n',tree.X(i),tree.Y(i),tree.Z(i));           
            end
            fprintf(fid,'%s\n','');

            % (2) Vertex GraphLabels
            fprintf(fid,'%s\n','@2');
            for i = 1:numVertex
                fprintf(fid,'%d\n',neuriteID);
            end
            fprintf(fid,'%s\n','');

            % (3) Edge Connectivity
            fprintf(fid,'%s\n','@3');
            for i = 1:size(EdgeConn,1)
                fprintf(fid,'%d %d\n',EdgeConn(i,1),EdgeConn(i,2));
            end
            fprintf(fid,'%s\n','');
            
            % (4) NumEdgePoints
            fprintf(fid,'%s\n','@4');
            for i = 1:length(edgePts)
                fprintf(fid,'%d\n',edgePts(i));
            end
            fprintf(fid,'%s\n','');

            % (5) Edge GraphLabels
            fprintf(fid,'%s\n','@5');
            for i = 1:numEdges
                fprintf(fid,'%d\n',neuriteID);
            end
            fprintf(fid,'%s\n','');
            
            % (6) Edge Coordinates
            fprintf(fid,'%s\n','@6');
            for i = 1:length(edgePts)
                endNodeIdx = sect(i,2);   
                startNodeIdx = sect(i,1); 
                Coordtmp = nan(3,edgePts(i));
                
                % Go backwards through edge points (because of ipar), then
                % flip the order of points
                Coordtmp(:,1) = [tree.X(endNodeIdx), tree.Y(endNodeIdx), tree.Z(endNodeIdx)]; 
                pts = 2;
                while (ismember(ipar(endNodeIdx,pts),idxC) && pts<edgePts(i)) % Continous points
                    Coordtmp(:,pts) = [tree.X(ipar(endNodeIdx,pts)), tree.Y(ipar(endNodeIdx,pts)), tree.Z(ipar(endNodeIdx,pts))]; 
                    pts = pts+1; 
                end
                Coordtmp(:,pts) = [tree.X(startNodeIdx), tree.Y(startNodeIdx), tree.Z(startNodeIdx)]; 
                Coordtmp = flipud(Coordtmp')'; 
                
                for ii = 1:edgePts(i)
                    fprintf(fid,'%e %e %e\n',Coordtmp(1,ii),Coordtmp(2,ii),Coordtmp(3,ii));
                end
            end
            fprintf(fid,'%s\n','');
            
            % (7) Edge Points Radius            
            fprintf(fid,'%s\n','@7');
            if length(tree.D)==length(tree.X) % If radius is given
                for i = 1:length(edgePts)
                    endNodeIdx = sect(i,2);   
                    startNodeIdx = sect(i,1); 
                    Radiustmp = nan(1,edgePts(i));

                    % Go backwards through edge points (because of ipar), then
                    % flip the order of points
                    Radiustmp(1) = tree.D(endNodeIdx); 
                    pts = 2;
                    while (ismember(ipar(endNodeIdx,pts),idxC) && pts<edgePts(i)) % Continous points
                        Radiustmp(pts) = tree.D(ipar(endNodeIdx,pts)); 
                        pts = pts+1; 
                    end
                    Radiustmp(pts) = tree.D(startNodeIdx); 
                    Radiustmp = flipud(Radiustmp')'; 

                    for ii = 1:edgePts(i)
                        fprintf(fid,'%f\n',Radiustmp(ii));
                    end
                end
            else % Old Version (for constant radius)
                for i = 1:numPoints
                    fprintf(fid,'%f\n',tree.D(1));
                end
            end
            fprintf(fid,'%s\n','');
            
            % Close file
            fclose(fid);
            
            %disp(['Wrote ' fname ' to the disk!']); 
        else
            error(['Failed writing ' fname ' to the disk!']); 
        end
end